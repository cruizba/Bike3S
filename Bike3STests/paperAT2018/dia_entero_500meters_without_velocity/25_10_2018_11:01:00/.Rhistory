include.dirs = FALSE,
no.. = FALSE)
#-----------------------
mi_vector <- c("barcelona","tarragona","lerida","gerona")
mi_vector2 <- c("barcelona1","tarragona1","lerida1","gerona1")
mi_vector2 <- t(mi_vector2)
mi_vector
View(mi_vector )
mi_vector <- t(mi_vector)
View(mi_vector )
View(mi_vector2)
View(mi_vector2)
View(mi_vector)
View(mi_vector)
mi_vector <-  rbind(mi_vector, mi_vector2)
View(t(mi_vector) )
View(mi_vector)
View(mi_vector2)
View(mi_vector)
View(mi_vector)
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
tabla<-t(c("Test","Media"))
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
print("-----------")
}
tabla <- sapply(tabla,function(x) {x <- gsub("analisis","lala",x)})
tabla
View(tabla)
View(data.frame(tabla))
tabla2 <- data.frame(tabla)
tabla2
View(tabla2)
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
tabla<-t(c("Test","Media"))
View(tabla)
#tabla <- as.vector("","")
listcsv
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
print("-----------")
}
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
View(tabla)
print("-----------")
}
#tabla <- t(tabla)
View(tabla)
tabla <- sapply(tabla,function(x) {x <- gsub("analisis","lala",x)})
tabla
View(tabla)
#tabla <- t(tabla)
View(tabla)
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
#View(tabla)
print("-----------")
}
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
tabla<-t(c("Test","Media"))
#tabla <- as.vector("","")
listcsv
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
#View(tabla)
print("-----------")
}
#tabla <- t(tabla)
View(tabla)
#tabla <- t(tabla)
View(tabla)
tabla[1] <- lapply(tabla[1], gsub, pattern = "analisis", replacement = "lala", fixed = TRUE)
tabla
View(tabla)
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
tabla<-t(c("Test","Media"))
#tabla <- as.vector("","")
listcsv
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
#View(tabla)
print("-----------")
}
#tabla <- t(tabla)
View(tabla)
tabla[1] <- lapply(tabla[1], gsub, pattern = "analisis", replacement = "lala", fixed = TRUE)
View(tabla)
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
tabla<-t(c("Test","Media"))
#tabla <- as.vector("","")
listcsv
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
#View(tabla)
print("-----------")
}
#tabla <- t(tabla)
View(tabla)
tabla[] <- lapply(tabla[], gsub, pattern = "analisis", replacement = "lala", fixed = TRUE)
View(tabla)
str(tabla)
str(users)
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
tabla<-data.frame(t(c("Test","Media")))
#tabla <- as.vector("","")
listcsv
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
#View(tabla)
print("-----------")
}
#tabla <- t(tabla)
View(tabla)
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
tabla<-data.frame(t(c("Test","Media")))
tabla
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
#tabla<-data.frame(t(c("Test","Media")))
tabla <-data.frame()
tabla
View(tabla)
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
#View(tabla)
print("-----------")
}
#tabla <- t(tabla)
View(tabla)
str(tabla)
str(users)
tabla <- sapply(tabla,function(x) {x <- gsub("analisis","lala",x)})
View(tabla)
#tabla <- t(tabla)
View(tabla)
#tabla <- t(tabla)
names(tabla) <- c("laa","sertd")
View(tabla)
#tabla <- t(tabla)
#names(timeByUser)[2] <- "time"
names(tabla)[2] <- "time"
View(tabla)
#tabla <- t(tabla)
#names(timeByUser)[2] <- "time"
names(tabla)[1] <- "time"
View(tabla)
listcsv <- list.files(path = "./analisis",
pattern = "users.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
#pattern = "*.csv" # creates the list of all the csv files in the directory
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
#tabla<-NULL
#tabla<-data.frame(t(c("Test","Media")))
tabla <-data.frame()
tabla
View(tabla)
#tabla <- as.vector("","")
listcsv
for (k in 1:length(listcsv)){
print(listcsv[k])
# Leo fichero
users  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
# Elimino las filas que tienen la celda en blanco
timeToStationAux <- users$time.to.origin.station[!is.na(users$time.to.origin.station)]
#Creo una columna
timeToStation <-  t(c(listcsv[k], mean (timeToStationAux)))
#Añado a la tabla las columnas
#(dat<-cbind(dat,bins2))
(tabla<-rbind(tabla,timeToStation))
#View(tabla)
print("-----------")
}
names(tabla) <- c("laa","sertd")
View(tabla)
listcsv <- list.files(path = params$path,
pattern = "stationBalancingQuality.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv <- list.files(path = "./analisis",
pattern = "stationBalancingQuality.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv
valores
for (k in 1:length(listcsv)){
# Leo fichero
valores  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
print("--------")
valores
}
print(valores)
listcsv
listcsv <- list.files(path = "./analisis",
pattern = "globalValues.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv
listcsv <- list.files(path = "./analisis",
pattern = "globalValues.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv
listcsv <- list.files(path = "./analisis",
pattern = "global_values.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv
for (k in 1:length(listcsv)){
# Leo fichero
valores  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
print("--------")
print(valores)
}
listcsv <- list.files(path = "./analisis",
pattern = "global_values.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv
# Creo los dataFrames necesarios:
tablaStationBalancingQuality <-data.frame()
for (k in 1:length(listcsv)){
# Leo fichero
valores  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
print("--------")
value <-format( mean (cyclingTime), digits=2, nsmall=2)
Aux <- t(c(listcsv[k],value))
#Añado a la tabla las columnas
(tablaStationBalancingQuality<-rbind(tablaStationBalancingQuality,Aux))
}
listcsv <- list.files(path = "./analisis",
pattern = "global_values.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv
# Creo los dataFrames necesarios:
tablaStationBalancingQuality <-data.frame()
for (k in 1:length(listcsv)){
# Leo fichero
valores  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
print("--------")
value <-format( mean (cyclingTime), digits=2, nsmall=2)
Aux <-  t(c(valores$Demand.satisfaction, valores$Hire.eficiency, valores$Return.eficiency))  #t(c(listcsv[k],value))
#Añado a la tabla las columnas
(tablaStationBalancingQuality<-rbind(tablaStationBalancingQuality,Aux))
}
for (k in 1:length(listcsv)){
# Leo fichero
valores  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
print("--------")
#value <-format( mean (cyclingTime), digits=2, nsmall=2)
Aux <-  t(c(valores$Demand.satisfaction, valores$Hire.eficiency, valores$Return.eficiency))  #t(c(listcsv[k],value))
#Añado a la tabla las columnas
(tablaStationBalancingQuality<-rbind(tablaStationBalancingQuality,Aux))
}
listcsv <- list.files(path = "./analisis",
pattern = "global_values.csv", #an optional regular expression. Only file names which match the regular expression will be returned.
all.files = FALSE, # If FALSE, only the names of visible files are returned. If TRUE, all file names will be returned.
full.names = TRUE, #If TRUE, muestra toda la ruta. Si no muestra sólo el nombre de la carpeta
recursive = TRUE,#Should subdirectory names be included in recursive listings?
ignore.case = FALSE,
include.dirs = FALSE,
no.. = FALSE)
listcsv
# Creo los dataFrames necesarios:
tablaStationBalancingQuality <-data.frame()
for (k in 1:length(listcsv)){
# Leo fichero
valores  <- read.csv(listcsv[k],
header = TRUE,
sep = ";"
)
Aux <-  t(c(valores$Demand.satisfaction, valores$Hire.eficiency, valores$Return.eficiency))
#Añado a la tabla las columnas
(tablaStationBalancingQuality<-rbind(tablaStationBalancingQuality,Aux))
}
tablaStationBalancingQuality
